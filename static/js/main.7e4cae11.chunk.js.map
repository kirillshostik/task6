{"version":3,"sources":["components/Main/Main.module.css","logo.svg","components/Employees/Employee.module.css","api/api.js","redux/employees-reducer.js","redux/store.js","components/Header/Header.jsx","components/Employees/Employees.jsx","components/Employees/AddEmployee.jsx","components/Employees/EmployeesContainer.jsx","components/Main/Main.jsx","App.js","serviceWorker.js","index.js","components/Header/Header.module.css"],"names":["module","exports","employeesAPI","axios","then","response","data","initialState","employees","id","employeesReducer","state","action","type","length","employee_name","reducers","combineReducers","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","Header","className","classes","header","to","headerItem","Employees","props","employeeContainer","map","employee","key","onClick","deleteEmployees","delete","reduxForm","onSubmit","handleSubmit","addEmployeeForm","Field","component","name","placeholder","disabled","pristine","submitting","reset","EmployeesComponent","this","getEmployees","AddEmployee","values","addEmployee","React","Component","compose","connect","dispatch","removeIndex","indexOf","splice","deleteEmployee","Main","title","App","exact","path","render","EmployeesContainer","Boolean","location","hostname","match","rerenderEntireTree","ReactDOM","document","getElementById","getState","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7e4cae11.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Main_title__2ToiK\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"employeeContainer\":\"Employee_employeeContainer__2zm2H\",\"employee\":\"Employee_employee__1ehm6\",\"delete\":\"Employee_delete__3QA6n\",\"addEmployeeForm\":\"Employee_addEmployeeForm__gRk3K\"};","import * as axios from \"axios\";\r\n\r\nexport const employeesAPI = {\r\n    getEmployees() {\r\n        return axios.get('https://cors-anywhere.herokuapp.com/http://dummy.restapiexample.com/api/v1/employees').then(response => {\r\n            return response.data;\r\n        })\r\n    }\r\n};\r\n","import {employeesAPI} from \"../api/api\";\r\n\r\nconst SET_EMPLOYEES = 'SET_EMPLOYEES';\r\nconst ADD_EMPLOYEE = 'ADD_EMPLOYEE';\r\nconst DELETE_EMPLOYEE = 'DELETE_EMPLOYEE';\r\n\r\n\r\nlet initialState = {\r\n    employees: [],\r\n    id: null\r\n};\r\n\r\nconst employeesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_EMPLOYEES: {\r\n            return {\r\n                ...state,\r\n                employees: [...action.employees],\r\n                id: action.employees.length\r\n            }\r\n\r\n        }\r\n        case ADD_EMPLOYEE:{\r\n            let employee_name = action.employee_name;\r\n            return {\r\n                ...state,\r\n                employees: [...state.employees, {id: state.id+1, employee_name}],\r\n                id: state.id+1\r\n            }\r\n        }\r\n        case DELETE_EMPLOYEE: {\r\n           return {\r\n               ...state,\r\n               employees: [...action.employees],\r\n               id: state.id\r\n           }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport let setEmployees = (employees) => {\r\n    return {type: SET_EMPLOYEES, employees}\r\n};\r\n\r\nexport let addEmployee = (employee_name) => {\r\n    return {type: ADD_EMPLOYEE, employee_name}\r\n};\r\nexport let deleteEmployee = (employees) => {\r\n    return {type: DELETE_EMPLOYEE, employees}\r\n};\r\n\r\nexport const getEmployees = () => {\r\n    return (dispatch) => {\r\n        employeesAPI.getEmployees().then(data => {\r\n            dispatch(setEmployees(data.data))\r\n        })\r\n    }\r\n};\r\n\r\nexport const deleteEmployees = (id, employees) => {\r\n    return (dispatch) => {\r\n        let removeIndex = employees.map(employee =>employee.id).indexOf(id);\r\n        ~removeIndex && employees.splice(removeIndex, 1);\r\n        dispatch(deleteEmployee(employees));\r\n    }\r\n};\r\n\r\nexport default employeesReducer;\r\n","import employeesReducer from \"./employees-reducer\";\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {reducer as formReducer} from \"redux-form\";\r\n\r\nlet reducers = combineReducers({\r\n    employees: employeesReducer,\r\n    form: formReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport function Header() {\r\n    return (\r\n        <header className={classes.header}>\r\n            <NavLink to={'/'} className={classes.headerItem}>Main</NavLink>\r\n            <NavLink to={'/employees'} className={classes.headerItem}>Employees</NavLink>\r\n        </header>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./Employee.module.css\"\r\n\r\nlet Employees = (props) => {\r\n    return (\r\n        <div  className={classes.employeeContainer}>\r\n            {props.employees.map(employee =>\r\n                <div  key={employee.id} className={classes.employee}>\r\n                    <p>{employee.employee_name}</p>\r\n                    <button onClick={() => {props.deleteEmployees(employee.id, props.employees)}} className={classes.delete}>Delete</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Employees;\r\n","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport classes from \"./Employee.module.css\"\r\n\r\nconst addEmployeeForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit} className={classes.addEmployeeForm}>\r\n        <p>Add employee</p>\r\n        <div>\r\n            <label>Name</label>\r\n            <Field\r\n                component={'input'}\r\n                name={'employee_name'}\r\n                type='text'\r\n                placeholder='Name'\r\n            />\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\" disabled={props.pristine || props.submitting}>\r\n                Add\r\n            </button>\r\n            <button type=\"button\" disabled={props.pristine || props.submitting} onClick={props.reset}>\r\n                Clear Values\r\n            </button>\r\n        </div>\r\n    </form>\r\n};\r\n\r\nexport default reduxForm({form: 'addEmployee'})(addEmployeeForm)\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Employees from \"./Employees\";\r\nimport {compose} from \"redux\";\r\nimport {getEmployees, addEmployee, deleteEmployees} from \"../../redux/employees-reducer\";\r\nimport AddEmployee from \"./AddEmployee\";\r\n\r\nclass EmployeesComponent extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getEmployees();\r\n    }\r\n\r\n    render() {\r\n        let addNewEmployee = (values) => {\r\n            this.props.addEmployee(values.employee_name)\r\n        };\r\n        return <div>\r\n            <Employees employees={this.props.employees} deleteEmployees={this.props.deleteEmployees}/>\r\n            <AddEmployee onSubmit={addNewEmployee}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        employees: state.employees.employees\r\n}\r\n};\r\n\r\nexport default compose(connect(mapStateToProps,{getEmployees, addEmployee, deleteEmployees}))(EmployeesComponent)\r\n","import React from 'react';\r\nimport classes from './Main.module.css';\r\n\r\nexport function Main() {\r\n    return (\r\n       <div>\r\n           <p className={classes.title}>Main page</p>\r\n       </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport {Header} from \"./components/Header/Header\";\nimport EmployeesContainer from \"./components/Employees/EmployeesContainer\";\nimport {Main} from \"./components/Main/Main\";\n\nfunction App() {\n  return (\n      <BrowserRouter>\n          <Header/>\n          <div>\n              <Route exact path={'/'} render={() => <Main/>}/>\n              <Route path={'/employees'} render={() => <EmployeesContainer/>}/>\n          </div>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import store from \"./redux/store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nexport let rerenderEntireTree = (state) => {\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>, document.getElementById('root'));\n};\n\nrerenderEntireTree(store.getState());\n\nstore.subscribe(() => {\n    let state = store.getState();\n    rerenderEntireTree(state)\n});\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__hs6kH\",\"headerItem\":\"Header_headerItem__3IODu\"};"],"sourceRoot":""}